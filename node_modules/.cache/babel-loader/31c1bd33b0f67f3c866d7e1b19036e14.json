{"ast":null,"code":"import _defineProperty from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Andy/Desktop/Queued_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Andy/Desktop/Queued_demo/src/components/Home/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport QueueList from \"./QueueList\";\nimport \"./App.css\";\nimport firebase from '../../firebase';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.addSong = function (e) {\n      e.preventDefault();\n      console.log(\"Add Song clicked. ID: \" + e.target.title); //add the song to the queue\n\n      var queueRef = firebase.database().ref('queue');\n      var newSong = {\n        songTitleAndArtist: e.target.innerText,\n        songId: e.target.title\n      };\n      queueRef.push(newSong); //Remove children from the search list\n\n      var ul = document.getElementById(\"resultsList\"); //remove all children first\n\n      while (ul.firstChild) {\n        ul.removeChild(ul.firstChild);\n      } //TODO: update the queue to show the changes\n\n    };\n\n    _this.handleSearch = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSearchSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.songSearchText !== '') {\n        //search for the song\n        //set results to results\n        //update the list\n        $.ajax({\n          url: \"https://api.spotify.com/v1/search?q=\" + _this.state.songSearchText + \"&type=track&limit=10\",\n          type: \"GET\",\n          beforeSend: function beforeSend(xhr) {\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + _this.state.token);\n          },\n          success: function success(data) {\n            if (data != undefined) {\n              console.log(data.tracks.items[0].id);\n              var ascResults = [];\n\n              for (var i = 0; i < 10; i++) {\n                ascResults.push({\n                  songTitle: data.tracks.items[i].name,\n                  songArtist: data.tracks.items[i].artists[0].name,\n                  songId: data.tracks.items[i].id\n                });\n              }\n\n              _this.setState({\n                songSearchResults: ascResults\n              });\n\n              console.log(_this.state.songSearchResults); //Now show a list of the results\n\n              var songs = _this.state.songSearchResults;\n              var ul = document.getElementById(\"resultsList\"); //remove all children first\n\n              while (ul.firstChild) {\n                ul.removeChild(ul.firstChild);\n              }\n\n              for (var i = 0; i < 10; i++) {\n                var li = document.createElement(\"li\");\n                li.setAttribute(\"id\", \"songResult\");\n                li.setAttribute(\"title\", songs[i].songId);\n                li.addEventListener(\"click\", _this.addSong);\n                li.appendChild(document.createTextNode(songs[i].songTitle + \" by \" + songs[i].songArtist));\n                ul.appendChild(li);\n              } // this.setState({\n              //   item: data.item,\n              //   is_playing: data.is_playing,\n              //   progress_ms: data.progress_ms\n              // });\n\n            } else {//it didn't work\n              }\n          }\n        }); //reset search field\n\n        _this.setState({\n          songSearchText: ''\n        });\n      }\n    };\n\n    _this.state = {\n      songSearchText: '',\n      songIdToAdd: '',\n      songSearchResults: [],\n      queue: [],\n      currentSongDBUID: null,\n      nextSongDBUID: null,\n      token: null,\n      device: '',\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    _this.getCurrentlyPlaying = _this.getCurrentlyPlaying.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set token\n      var _token = hash.access_token;\n\n      if (_token) {\n        // Set token\n        this.setState({\n          token: _token\n        }); //this.updateQueue(_token);\n\n        this.getCurrentlyPlaying(_token);\n      }\n\n      this.interval = window.setInterval(function () {\n        if (_token) {\n          // Set token\n          this.setState({\n            token: _token\n          }); //this.updateQueue(_token);\n\n          this.getCurrentlyPlaying(_token);\n        }\n      }.bind(this), 5000);\n    }\n  }, {\n    key: \"getCurrentlyPlaying\",\n    value: function getCurrentlyPlaying(token) {\n      var _this2 = this;\n\n      // Make a call using the token\n      $.ajax({\n        url: \"https://api.spotify.com/v1/me/player\",\n        type: \"GET\",\n        beforeSend: function beforeSend(xhr) {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: function success(data) {\n          if (data != undefined) {\n            _this2.setState({\n              item: data.item,\n              is_playing: data.is_playing,\n              progress_ms: data.progress_ms\n            });\n          } else {\n            _this2.state = {\n              token: null,\n              item: {\n                album: {\n                  images: [{\n                    url: \"\"\n                  }]\n                },\n                name: \"\",\n                artists: [{\n                  name: \"\"\n                }],\n                duration_ms: 0\n              },\n              is_playing: \"Paused\",\n              progress_ms: 0\n            };\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getCurrentDevice\",\n    value: function getCurrentDevice(token) {\n      $.ajax({\n        url: \"https://api.spotify.com/v1/me/player/devices\",\n        type: \"GET\",\n        beforeSend: function beforeSend(xhr) {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: function success(data) {\n          if (data != undefined) {\n            // this.setState({\n            //   item: data.item,\n            //   is_playing: data.is_playing,\n            //   progress_ms: data.progress_ms\n            // });\n            console.log(data);\n          } else {// this.state = {\n            //   token: null,\n            //   item: {\n            //     album: {\n            //       images: [{ url: \"\" }]\n            //     },\n            //     name: \"\",\n            //     artists: [{ name: \"\" }],\n            //     duration_ms: 0\n            //   },\n            //   is_playing: \"Paused\",\n            //   progress_ms: 0\n            // };\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateQueue\",\n    value: function updateQueue(token) {\n      var _this3 = this;\n\n      var queueRef = firebase.database().ref('queue');\n      queueRef.on('value', function (snapshot) {\n        var getQueue = snapshot.val();\n        var ascQueue = [];\n\n        for (var song in getQueue) {\n          if (getQueue[song] !== undefined) {\n            ascQueue.push({\n              //add this song to ascQueue\n              songId: getQueue[song].songId,\n              songTitleAndArtist: getQueue[song].songTitleAndArtist\n            }); //add this song to spotify queue\n\n            $.ajax({\n              url: \"https://api.spotify.com/v1/me/player/queue\",\n              type: \"POST\",\n              beforeSend: function beforeSend(xhr) {\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n              },\n              success: function success(data) {\n                if (data != undefined) {\n                  _this3.setState({\n                    item: data.item,\n                    is_playing: data.is_playing,\n                    progress_ms: data.progress_ms\n                  });\n                } else {\n                  _this3.state = {\n                    token: null,\n                    item: {\n                      album: {\n                        images: [{\n                          url: \"\"\n                        }]\n                      },\n                      name: \"\",\n                      artists: [{\n                        name: \"\"\n                      }],\n                      duration_ms: 0\n                    },\n                    is_playing: \"Paused\",\n                    progress_ms: 0\n                  };\n                }\n              }\n            });\n          }\n        }\n\n        _this3.setState({\n          queue: getQueue\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, !this.state.token && React.createElement(\"a\", {\n        className: \"btn btn--loginApp-link\",\n        href: \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join(\"%20\"), \"&response_type=token&show_dialog=true\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Login to Spotify\"), this.state.token && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Player, {\n        item: this.state.item,\n        is_playing: this.state.is_playing,\n        progress_ms: this.progress_ms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \"\\n\", React.createElement(QueueList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), \"\\n\", React.createElement(\"div\", {\n        className: \"searchsong\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Add a song:\"), \"\\n\", React.createElement(\"form\", {\n        className: \"send-song\",\n        onSubmit: this.handleSearchSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"songSearchText\",\n        id: \"searchText\",\n        value: this.state.songSearchText,\n        onChange: this.handleSearch,\n        placeholder: \"Search for a song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      })), \"\\n\", React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"result-list\",\n        id: \"resultsList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Andy/Desktop/Queued_demo/src/components/Home/App.js"],"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","QueueList","firebase","App","addSong","e","preventDefault","console","log","target","title","queueRef","database","ref","newSong","songTitleAndArtist","innerText","songId","push","ul","document","getElementById","firstChild","removeChild","handleSearch","setState","name","value","handleSearchSubmit","state","songSearchText","ajax","url","type","beforeSend","xhr","setRequestHeader","token","success","data","undefined","tracks","items","id","ascResults","i","songTitle","songArtist","artists","songSearchResults","songs","li","createElement","setAttribute","addEventListener","appendChild","createTextNode","songIdToAdd","queue","currentSongDBUID","nextSongDBUID","device","item","album","images","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","_token","access_token","interval","window","setInterval","on","snapshot","getQueue","val","ascQueue","song","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport QueueList from \"./QueueList\";\nimport \"./App.css\";\nimport firebase from '../../firebase';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      songSearchText: '',\n      songIdToAdd: '',\n      songSearchResults: [],\n      queue: [],\n      currentSongDBUID: null,\n      nextSongDBUID: null,\n      token: null,\n      device: '',\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      //this.updateQueue(_token);\n      this.getCurrentlyPlaying(_token);\n    }\n\n    this.interval = window.setInterval(\n      (function () {\n        if (_token) {\n          // Set token\n          this.setState({\n            token: _token\n          });\n          //this.updateQueue(_token);\n          this.getCurrentlyPlaying(_token);\n        }\n      }).bind(this),\n      5000\n    )\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        if (data != undefined){\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms\n          });\n        }\n        else {\n          this.state = {\n            token: null,\n            item: {\n              album: {\n                images: [{ url: \"\" }]\n              },\n              name: \"\",\n              artists: [{ name: \"\" }],\n              duration_ms: 0\n            },\n            is_playing: \"Paused\",\n            progress_ms: 0\n          };\n        }\n      }\n    });\n  }\n\n  getCurrentDevice(token){\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player/devices\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        if (data != undefined){\n          // this.setState({\n          //   item: data.item,\n          //   is_playing: data.is_playing,\n          //   progress_ms: data.progress_ms\n          // });\n          console.log(data);\n        }\n        else {\n          // this.state = {\n          //   token: null,\n          //   item: {\n          //     album: {\n          //       images: [{ url: \"\" }]\n          //     },\n          //     name: \"\",\n          //     artists: [{ name: \"\" }],\n          //     duration_ms: 0\n          //   },\n          //   is_playing: \"Paused\",\n          //   progress_ms: 0\n          // };\n        }\n      }\n    });\n  }\n\n  updateQueue(token){\n    const queueRef = firebase.database().ref('queue');\n\n    queueRef.on('value', snapshot => {\n      const getQueue = snapshot.val();\n      let ascQueue = [];\n      for(let song in getQueue){\n        if(getQueue[song] !== undefined){\n          ascQueue.push({\n            //add this song to ascQueue\n            songId: getQueue[song].songId,\n            songTitleAndArtist: getQueue[song].songTitleAndArtist\n          });\n          //add this song to spotify queue\n          $.ajax({\n            url: \"https://api.spotify.com/v1/me/player/queue\",\n            type: \"POST\",\n            beforeSend: xhr => {\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n            },\n            success: data => {\n              if (data != undefined){\n                this.setState({\n                  item: data.item,\n                  is_playing: data.is_playing,\n                  progress_ms: data.progress_ms\n                });\n              }\n              else {\n                this.state = {\n                  token: null,\n                  item: {\n                    album: {\n                      images: [{ url: \"\" }]\n                    },\n                    name: \"\",\n                    artists: [{ name: \"\" }],\n                    duration_ms: 0\n                  },\n                  is_playing: \"Paused\",\n                  progress_ms: 0\n                };\n              }\n            }\n          });\n        }\n      }\n      this.setState({queue: getQueue});\n    });\n  }\n\n  addSong = e =>{\n    e.preventDefault();\n    console.log(\"Add Song clicked. ID: \" + e.target.title);\n    //add the song to the queue\n    const queueRef = firebase.database().ref('queue');\n    const newSong = {\n      songTitleAndArtist: e.target.innerText,\n      songId: e.target.title\n    }\n    queueRef.push(newSong);\n    //Remove children from the search list\n    var ul = document.getElementById(\"resultsList\");\n    //remove all children first\n    while(ul.firstChild) ul.removeChild(ul.firstChild);\n    //TODO: update the queue to show the changes\n  }\n\n  handleSearch = e => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSearchSubmit = e => {\n    e.preventDefault();\n    if(this.state.songSearchText !== ''){\n      //search for the song\n      //set results to results\n      //update the list\n      $.ajax({\n        url: \"https://api.spotify.com/v1/search?q=\" + this.state.songSearchText + \"&type=track&limit=10\",\n        type: \"GET\",\n        beforeSend: xhr => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\n        },\n        success: data => {\n          if (data != undefined){\n            console.log(data.tracks.items[0].id);\n            let ascResults = [];\n            for (var i = 0; i < 10; i++){\n              ascResults.push({\n                songTitle: data.tracks.items[i].name,\n                songArtist: data.tracks.items[i].artists[0].name,\n                songId: data.tracks.items[i].id\n              })\n            }\n            this.setState({songSearchResults: ascResults});\n            console.log(this.state.songSearchResults);\n\n            //Now show a list of the results\n            let songs = this.state.songSearchResults;\n            var ul = document.getElementById(\"resultsList\");\n            //remove all children first\n            while(ul.firstChild) ul.removeChild(ul.firstChild);\n            for (var i = 0; i < 10; i++){\n              var li = document.createElement(\"li\");\n              li.setAttribute(\"id\", \"songResult\");\n              li.setAttribute(\"title\", songs[i].songId);\n              li.addEventListener(\"click\", this.addSong);\n              li.appendChild(document.createTextNode(songs[i].songTitle + \" by \" + songs[i].songArtist));\n              ul.appendChild(li);\n            }\n\n            // this.setState({\n            //   item: data.item,\n            //   is_playing: data.is_playing,\n            //   progress_ms: data.progress_ms\n            // });\n          }\n          else {\n            //it didn't work\n          }\n        }\n      });\n\n      //reset search field\n      this.setState({songSearchText: ''});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && (\n            <div>\n              <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              />\n              {\"\\n\"}\n              <QueueList />\n              {\"\\n\"}\n              <div className=\"searchsong\">\n                <div className=\"main-wrapper\">\n                  <h1>Add a song:</h1>\n                  {\"\\n\"}\n                  <form className=\"send-song\" onSubmit={this.handleSearchSubmit}>\n                    <input type=\"text\" name=\"songSearchText\" id=\"searchText\" value={this.state.songSearchText} onChange={this.handleSearch} placeholder='Search for a song' />\n                  </form>\n                  {\"\\n\"}\n                  <div className=\"container\">\n                    <ul className='result-list' id='resultsList'>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}