{"ast":null,"code":"import _classCallCheck from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Andy/Desktop/Queued_demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Andy/Desktop/Queued_demo/src/components/Home/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport \"./App.css\";\nimport firebase from '../../firebase';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      queue: [],\n      currentSong: null,\n      nextSong: null,\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    _this.getCurrentlyPlaying = _this.getCurrentlyPlaying.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getCurrentSongFromDB\",\n    value: function getCurrentSongFromDB() {}\n  }, {\n    key: \"getNextSongFromDB\",\n    value: function getNextSongFromDB() {}\n  }, {\n    key: \"updateQueue\",\n    value: function updateQueue() {\n      var _this2 = this;\n\n      var queueRef = firebase.database().ref('queue');\n      queueRef.on('value', function (snapshot) {\n        var getQueue = snapshot.val();\n        var ascQueue = [];\n        var current = null;\n        var next = null;\n        var i = 0;\n\n        for (var song in getQueue) {\n          if (song !== undefined) {\n            //if this is the first song, it's currently playing\n            if (i == 0) {} //set current song to this title\n            //if this is the second song, it's next\n            else if (i == 1) {//set next song to this title\n              }\n\n            ascQueue.push({//add this song to ascQueue\n            });\n          }\n\n          i++;\n        }\n\n        var queue = getQueue.reverse();\n\n        _this2.setState({\n          queue: queue\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Set token\n      var _token = hash.access_token;\n      this.interval = window.setInterval(function () {\n        if (_token) {\n          // Set token\n          this.setState({\n            token: _token\n          }); //this.updateQueue(_token);\n\n          this.getCurrentlyPlaying(_token);\n        }\n      }.bind(this), 5000);\n    }\n  }, {\n    key: \"sendNextSong\",\n    value: function sendNextSong(token) {}\n  }, {\n    key: \"setCurrentSong\",\n    value: function setCurrentSong(token) {}\n  }, {\n    key: \"getConnectedDevice\",\n    value: function getConnectedDevice(token) {}\n  }, {\n    key: \"getCurrentlyPlaying\",\n    value: function getCurrentlyPlaying(token) {\n      var _this3 = this;\n\n      // Make a call using the token\n      $.ajax({\n        url: \"https://api.spotify.com/v1/me/player\",\n        type: \"GET\",\n        beforeSend: function beforeSend(xhr) {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: function success(data) {\n          if (data != undefined) {\n            _this3.setState({\n              item: data.item,\n              is_playing: data.is_playing,\n              progress_ms: data.progress_ms\n            });\n          } else {\n            _this3.state = {\n              token: null,\n              item: {\n                album: {\n                  images: [{\n                    url: \"\"\n                  }]\n                },\n                name: \"\",\n                artists: [{\n                  name: \"\"\n                }],\n                duration_ms: 0\n              },\n              is_playing: \"Paused\",\n              progress_ms: 0\n            };\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, !this.state.token && React.createElement(\"a\", {\n        className: \"btn btn--loginApp-link\",\n        href: \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join(\"%20\"), \"&response_type=token&show_dialog=true\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Login to Spotify\"), this.state.token && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Player, {\n        item: this.state.item,\n        is_playing: this.state.is_playing,\n        progress_ms: this.progress_ms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(QueueList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(AddSong, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Andy/Desktop/Queued_demo/src/components/Home/App.js"],"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","firebase","App","state","queue","currentSong","nextSong","token","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","queueRef","database","ref","on","snapshot","getQueue","val","ascQueue","current","next","i","song","undefined","push","reverse","setState","_token","access_token","interval","window","setInterval","ajax","type","beforeSend","xhr","setRequestHeader","success","data","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport \"./App.css\";\nimport firebase from '../../firebase';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      queue: [],\n      currentSong: null,\n      nextSong: null,\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentSongFromDB(){\n\n  }\n\n  getNextSongFromDB(){\n\n  }\n\n  updateQueue(){\n    const queueRef = firebase.database().ref('queue');\n\n    queueRef.on('value', snapshot => {\n      const getQueue = snapshot.val();\n      let ascQueue = [];\n      let current = null;\n      let next = null;\n      var i = 0;\n      for(let song in getQueue){\n        if(song !== undefined){\n          //if this is the first song, it's currently playing\n          if (i == 0){\n            //set current song to this title\n          }\n          //if this is the second song, it's next\n          else if (i == 1){\n            //set next song to this title\n          }\n          ascQueue.push({\n            //add this song to ascQueue\n          });\n        }\n        i++;\n      }\n      const queue = getQueue.reverse();\n      this.setState({queue: queue});\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    this.interval = window.setInterval(\n      (function () {\n        if (_token) {\n          // Set token\n          this.setState({\n            token: _token\n          });\n          //this.updateQueue(_token);\n          this.getCurrentlyPlaying(_token);\n        }\n      }).bind(this),\n      5000\n    )\n  }\n\n  sendNextSong(token){\n\n  }\n\n  setCurrentSong(token){\n\n  }\n\n  getConnectedDevice(token){\n    \n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        if (data != undefined){\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms\n          });\n        }\n        else {\n          this.state = {\n            token: null,\n            item: {\n              album: {\n                images: [{ url: \"\" }]\n              },\n              name: \"\",\n              artists: [{ name: \"\" }],\n              duration_ms: 0\n            },\n            is_playing: \"Paused\",\n            progress_ms: 0\n          };\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && (\n            <div>\n              <Player\n                item={this.state.item}\n                is_playing={this.state.is_playing}\n                progress_ms={this.progress_ms}\n              />\n              <QueueList />\n              <AddSong />\n            </div>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}